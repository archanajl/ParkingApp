{"ast":null,"code":"var _jsxFileName = \"/Users/revad/Documents/Personal/ParkingApp/src/components/ParkingSlots.js\";\nimport React from 'react';\nimport ParkingSlot from './ParkingSlot';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ParkingNewCard from './ParkingNewCard';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'; // import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ParkingSlots extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragEnd = result => {// TODO: reorder our column\n    };\n  }\n\n  render() {\n    const {\n      slotChanged\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.props.slots.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"widget__message\",\n        children: \"Please add a slot to get started !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => {\n          slotChanged(result.source.index - 1, result.destination.index - 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"ParkingSlots\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [this.props.slots.map((slot, iterator) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `parking_${iterator}`,\n              index: iterator + 1,\n              children: nestedprovided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid-item\",\n                ...nestedprovided.draggableProps,\n                ...nestedprovided.dragHandleProps,\n                ref: nestedprovided.innerRef,\n                children: /*#__PURE__*/_jsxDEV(ParkingSlot, {\n                  handleDeleteAnOption: this.props.handleDeleteAnOption,\n                  handleFavDelete: this.props.handleFavDelete,\n                  handleAddFavorite: this.props.handleAddFavorite,\n                  index: iterator + 1,\n                  slot: slot,\n                  favorites: this.props.favorites\n                }, iterator + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this)\n            }, iterator + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-grid-item grid-item\",\n              children: [this.props.showNewCard && /*#__PURE__*/_jsxDEV(ParkingNewCard, {\n                handleNewOption: this.props.handleNewOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 60\n              }, this), !this.props.showNewCard && /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n                style: {\n                  fill: \"green\"\n                },\n                onClick: e => {\n                  this.props.addNewCard();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/revad/Documents/Personal/ParkingApp/src/components/ParkingSlots.js"],"names":["React","ParkingSlot","AddCircleIcon","ParkingNewCard","DragDropContext","Draggable","Droppable","ParkingSlots","Component","onDragEnd","result","render","slotChanged","props","slots","length","source","index","destination","provided","droppableProps","innerRef","map","slot","iterator","nestedprovided","draggableProps","dragHandleProps","handleDeleteAnOption","handleFavDelete","handleAddFavorite","favorites","showNewCard","handleNewOption","fill","e","addNewCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ParkingSlot from './ParkingSlot'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ParkingNewCard from './ParkingNewCard';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\n\nexport default class ParkingSlots extends React.Component {\n\n    onDragEnd = result => {\n        // TODO: reorder our column\n    };\n\n    render() {\n        const { slotChanged } = this.props\n        return (\n            <div className=\"container\">\n                {this.props.slots.length === 0 && <p className=\"widget__message\">Please add a slot to get started !!</p>}\n                <DragDropContext\n                    onDragEnd={(result) => { slotChanged(result.source.index - 1, result.destination.index - 1)}}>\n                    <Droppable droppableId='ParkingSlots' direction=\"horizontal\">\n                        {(provided) => (<div className=\"grid-container\" {...provided.droppableProps}\n                            ref={provided.innerRef}>\n                            {this.props.slots.map((slot, iterator) => (\n                                <Draggable\n                                    draggableId={`parking_${iterator}`}\n                                    key={iterator + 1}\n                                    index={iterator + 1}>\n                                    {(nestedprovided) => (\n                                        <div className=\"grid-item\"\n                                            {...nestedprovided.draggableProps}\n                                            {...nestedprovided.dragHandleProps}\n                                            ref={nestedprovided.innerRef}\n                                        >\n                                            <ParkingSlot\n                                                handleDeleteAnOption={this.props.handleDeleteAnOption}\n                                                handleFavDelete={this.props.handleFavDelete}\n                                                handleAddFavorite={this.props.handleAddFavorite}\n                                                key={iterator + 1}\n                                                index={iterator + 1}\n                                                slot={slot}\n                                                favorites={this.props.favorites}\n                                            >\n                                            </ParkingSlot>\n                                        </div>)}\n                                </Draggable>))}\n                            <div className=\"new-grid-item grid-item\">\n                                {this.props.showNewCard && <ParkingNewCard handleNewOption={this.props.handleNewOption} />}\n                                {!this.props.showNewCard && <AddCircleIcon style={{ fill: \"green\" }} onClick={(e) => { this.props.addNewCard() }} />}\n                            </div>\n                        </div>)}\n                    </Droppable>\n                </DragDropContext>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}